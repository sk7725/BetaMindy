plugins {
    id 'java'
    id 'java-library'
}

//todo nice way of fetching from CI/CD
final buildFilename = "BetaMindy.jar"

group 'com.github.sk7725'
version = "1.0-SNAPSHOT"

targetCompatibility = 8
sourceCompatibility = 15

sourceSets.main {
    java.srcDirs([ "src/" ])
    resources.srcDirs([ "assets/" ])
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation 'com.github.Anuken.Mindustry:core:v121.4'
    annotationProcessor 'com.github.Anuken:jabel:34e4c172e65b3928cd9eabe1993654ea79c409cd'
}

jar {
    archiveName buildFilename
}

task dexify doLast {
    exec {
        workingDir jar.archiveFile.get().asFile.parent

        if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
            commandLine "cmd", "/c", "dx", "--dex", "--min-sdk-version=26", "--output=dexed-$buildFilename", buildFilename
        } else {
            commandLine "dx", "--dex", "--min-sdk-version=26", "--output=dexed-$buildFilename", buildFilename
        }
    }
}

task buildDex dependsOn "build", "dexify"

tasks.withType(JavaCompile){
    options.encoding("UTF-8")
    if(JavaVersion.current() != JavaVersion.VERSION_1_8){
        options.compilerArgs.addAll(['--release', '8', '--enable-preview'])
    }

    doFirst{
        options.compilerArgs = options.compilerArgs.findAll{ it != '--enable-preview' }
    }
}
